[{"/home/thibaultclerc/NEXT/DIPPR/dippr/src/serviceWorkerRegistration.js":"1","/home/thibaultclerc/NEXT/DIPPR/dippr/src/store/store.js":"2","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Login/index.jsx":"3","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Search/index.jsx":"4","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MarketDish/index.jsx":"5","/home/thibaultclerc/NEXT/DIPPR/dippr/src/store/actions/index.jsx":"6","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/DishCard/index.jsx":"7","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UI/Stars/index.jsx":"8","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UI/SimpleCard/index.jsx":"9","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MyTransactions/index.jsx":"10","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MyTransactions/TransactionDialog/index.jsx":"11","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Swap/index.jsx":"12","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MyMarketDishes/index.jsx":"13","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MyMarketDishes/MyMarketDishesDisplay/index.jsx":"14","/home/thibaultclerc/NEXT/DIPPR/dippr/src/reportWebVitals.js":"15","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/IosDetect/index.js":"16","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Home/index.jsx":"17","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Announcement/index.jsx":"18","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/Autocomplete/index.jsx":"19","/home/thibaultclerc/NEXT/DIPPR/dippr/src/App.js":"20","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Signup/index.jsx":"21","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/Map/index.jsx":"22"},{"size":5116,"mtime":1607955891980,"results":"23","hashOfConfig":"24"},{"size":648,"mtime":1608375117780,"results":"25","hashOfConfig":"24"},{"size":5381,"mtime":1608429944225,"results":"26","hashOfConfig":"24"},{"size":3201,"mtime":1608384043367,"results":"27","hashOfConfig":"24"},{"size":15662,"mtime":1608482105200,"results":"28","hashOfConfig":"24"},{"size":250,"mtime":1607681528330,"results":"29","hashOfConfig":"24"},{"size":4338,"mtime":1608384043367,"results":"30","hashOfConfig":"24"},{"size":564,"mtime":1607985050010,"results":"31","hashOfConfig":"24"},{"size":957,"mtime":1607939957130,"results":"32","hashOfConfig":"24"},{"size":14750,"mtime":1608482554100,"results":"33","hashOfConfig":"24"},{"size":7197,"mtime":1608430046875,"results":"34","hashOfConfig":"24"},{"size":3061,"mtime":1608465123520,"results":"35","hashOfConfig":"24"},{"size":1143,"mtime":1608481843880,"results":"36","hashOfConfig":"24"},{"size":1553,"mtime":1608478083070,"results":"37","hashOfConfig":"24"},{"size":364,"mtime":1607955891980,"results":"38","hashOfConfig":"24"},{"size":1042,"mtime":1607955891980,"results":"39","hashOfConfig":"24"},{"size":370,"mtime":1608343685527,"results":"40","hashOfConfig":"24"},{"size":10588,"mtime":1608384043367,"results":"41","hashOfConfig":"24"},{"size":873,"mtime":1608073551230,"results":"42","hashOfConfig":"24"},{"size":634,"mtime":1608343685527,"results":"43","hashOfConfig":"24"},{"size":6194,"mtime":1608429944225,"results":"44","hashOfConfig":"24"},{"size":2150,"mtime":1608203259880,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15j1p5p",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/thibaultclerc/NEXT/DIPPR/dippr/src/serviceWorkerRegistration.js",["94"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/store/store.js",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Login/index.jsx",["95","96","97","98","99","100","101","102","103","104","105"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Search/index.jsx",["106","107"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MarketDish/index.jsx",["108","109","110","111","112","113","114"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/store/actions/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/DishCard/index.jsx",["115"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UI/Stars/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UI/SimpleCard/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MyTransactions/index.jsx",["116","117","118","119"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MyTransactions/TransactionDialog/index.jsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Typography from '@material-ui/core/Typography';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    \"&:focus\": {\n      backgroundColor:'#edf5ff',\n    },\n  },\n  submitBtn: {\n    marginTop: 10,\n    margin: 'auto',\n    display: 'block',\n    padding: 10\n  },\n  image: {\n    width: \"-webkit-fill-available\"\n  }\n}))\n\nconst TransactionDialog = ({open, handleSelectedValue, handleClose, transaction, answerer, caller, currentUser}) => {\n  const [selectedValue, setSelectedValue] = useState(null);\n  const classes = useStyles();\n\n  const handleListItemClick = (userResponse) => {\n    if (userResponse !== null) {\n      handleSelectedValue(userResponse)\n      handleClose(false)\n    }\n  }\n\n  const handleModalClose = () => {\n    handleClose(false)\n  }\n\n  const handleItemDisplay = () => {\n    if (transaction.type === \"trocs\") {\n      if (answerer.id == currentUser.id) {\n        return (\n          <>\n            <img className={classes.image} src={`https://dippr-api-development.herokuapp.com${transaction.meta.caller_dish.photo_url}`}></img>\n            <ListItem key={transaction.id} button>\n              <ListItemAvatar>\n                <Avatar\n                  // alt={`Avatar n°${value + 1}`}\n                  // src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={transaction.id} primary={caller.first_name} />\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {caller.city}\n              </Typography>\n            </ListItem>\n            <DialogContent dividers>\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                {caller.first_name} souhaite échanger son {transaction.meta.caller_dish.name} contre votre \n                  {transaction.meta.answer_dish.name}\n              </Typography>\n            </DialogContent>\n            <MuiDialogActions>\n              <Button autoFocus onClick={() => handleListItemClick(1)} color=\"primary\">\n                ACCEPTER\n              </Button>\n              <Button autoFocus onClick={() => handleListItemClick(2)} color=\"secondary\">\n                REFUSER\n              </Button>\n            </MuiDialogActions>\n          </>\n        )\n      } else {\n        return (\n          <>\n            <img className={classes.image} src={`https://dippr-api-development.herokuapp.com${transaction.meta.answer_dish.photo_url}`}></img>\n            <ListItem key={transaction.id} button>\n              <ListItemAvatar>\n                <Avatar\n                  // alt={`Avatar n°${value + 1}`}\n                  // src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={transaction.id} primary={answerer.first_name} />\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {answerer.city}\n              </Typography>\n            </ListItem>\n            <DialogContent dividers>\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                Vous avez proposé votre {transaction.meta.caller_dish.name} à\n                {answerer.first_name} contre son  {transaction.meta.answer_dish.name}\n              </Typography>\n            </DialogContent>\n            <MuiDialogActions>\n              <Button autoFocus onClick={() => handleListItemClick(3)} color=\"secondary\">\n                ANNULER\n              </Button>\n            </MuiDialogActions>\n          </>\n        )\n      }\n    } else if (transaction.type === \"donations\") {\n      if (caller.id == currentUser.id) {\n        return (\n          <>\n            <img className={classes.image} src={`https://dippr-api-development.herokuapp.com${transaction.meta.answer_dish.photo_url}`}></img>\n            <ListItem key={transaction.id} button>\n              <ListItemAvatar>\n                <Avatar\n                  // alt={`Avatar n°${value + 1}`}\n                  // src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={transaction.id} primary={caller.first_name} />\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {caller.city}\n              </Typography>\n            </ListItem>\n            <DialogContent dividers>\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                Vous avez demandé à {answerer.first_name} son \n                {transaction.meta.answer_dish.name}\n              </Typography>\n            </DialogContent>\n            <MuiDialogActions>\n              <Button autoFocus onClick={() => handleListItemClick(3)} color=\"secondary\">\n                ANNULER\n              </Button>\n            </MuiDialogActions>\n          </>\n        )\n      } else {\n        return (\n        <>\n          <img className={classes.image} src={`https://dippr-api-development.herokuapp.com${transaction.meta.answer_dish.photo_url}`}></img>\n          <ListItem key={transaction.id} button>\n            <ListItemAvatar>\n              <Avatar\n                // alt={`Avatar n°${value + 1}`}\n                // src={`/static/images/avatar/${value + 1}.jpg`}\n              />\n            </ListItemAvatar>\n            <ListItemText id={transaction.id} primary={caller.first_name} />\n            <Typography variant=\"body2\" color=\"textPrimary\">\n              {caller.city}\n            </Typography>\n          </ListItem>\n          <DialogContent dividers>\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              {caller.first_name} vous a demandé votre\n              {transaction.meta.answer_dish.name}\n            </Typography>\n          </DialogContent>\n          <MuiDialogActions>\n            <Button autoFocus onClick={() => handleListItemClick(1)} color=\"primary\">\n              ACCEPTER\n            </Button>\n            <Button autoFocus onClick={() => handleListItemClick(1)} color=\"secondary\">\n              REFUSER\n            </Button>\n          </MuiDialogActions>\n        </>\n        )\n      }\n    }\n  }\n\n  return (\n    <>\n      <Dialog onClose={handleModalClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n        {handleItemDisplay()}\n      </Dialog>\n    </>\n  );\n}\n\nexport default TransactionDialog;\n","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Swap/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MyMarketDishes/index.jsx",["136"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MyMarketDishes/MyMarketDishesDisplay/index.jsx",["137","138","139","140","141"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/reportWebVitals.js",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/IosDetect/index.js",["142"],"import {useState, useEffect} from \"react\";\nimport moment from \"moment\";\n\nfunction checkForIOS() {\n    if (navigator.standalone) {\n        return false;\n    }\n    const today = moment().toDate();\n    const lastPrompt = moment(localStorage.getItem(\"installPrompt\"));\n    const days = moment(today).diff(lastPrompt, \"days\");\n    const ua = window.navigator.userAgent;\n    const webkit = !!ua.match(/WebKit/i);\n    const isIPad = !!ua.match(/iPad/i);\n    const isIPhone = !!ua.match(/iPhone/i)\n    const isIOS = isIPad || isIPhone;\n    const isSafari = isIOS && webkit && !ua.match(/CriOS/i);\n\n    const prompt = (isNaN(days) || days > 30) && isIOS && isSafari;\n\n    if (prompt && \"localStorage\" in window) {\n        localStorage.setItem(\"installPrompt\", today);\n    }\n\n    return {isIOS, isSafari, prompt};\n}\n\nexport default function useIsIOS() {\n    const [isIOS, setIsIOS] = useState({});\n\n    useEffect(() => {\n        setIsIOS(checkForIOS());\n        return() => console.log(\"CLEANUP INSTALL PROMPT\", isIOS);\n    }, []);\n\n    return isIOS;\n}",["143","144"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Home/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Announcement/index.jsx",["145","146"],"import React, { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport SearchBar from '../../components/Autocomplete'\nimport SendIcon from '@material-ui/icons/Send';\nimport Cookies from 'js-cookie'\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Connection from '../../pages/Login'\nimport Signup from '../../pages/Signup'\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { Button, ButtonGroup, Dialog, DialogActions, DialogContent, InputBase, IconButton  } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport useDeviceDetect from '../../components/DeviceDetect';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Announcement = ({value, visibleModal, alert, visibleAlert}) => {\n  const classes = useStyles();\n  const { isMobile } = useDeviceDetect();\n  const [ingredients, setIngredients] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [open, setOpen] = useState(value);\n  const [publishSuccess, setPublishSuccess] = useState(alert)\n  const [file, setFile] = useState(null)\n  const imageSrc = React.useRef(null)\n  const [announceType, setAnnounceType] = useState(0)\n  const [date, setDate] = useState(moment().format(\"YYYY-MM-DD\"))\n  const user = useSelector(state => state.user.user);\n  const [currentTags, setCurrentTags] = useState([]);\n  const [currentIngredients, setCurrentIngredients] = useState([]);\n  const [visibleSignup, setVisibleSignup] = useState(null)\n  const [visibleLogin, setVisibleLogin] = useState(true)\n\n  const data = {\n      name: name,\n      description: description\n  };\n\n  useEffect(() => {\n  }, [isMobile])\n\n  const handlePublishSuccess = () => {\n    setPublishSuccess(true);\n    visibleAlert(true)\n  };\n\n  const handleClose = () => {\t\n    setOpen(false);\t\n    visibleModal(false)\t\n  };\n\n  const handleFile = ({target}) =>{\n    setFile(target.files[0]);\n  };\n\n  const handleDate = (e) =>{\n    setDate(e.target.value);\n  };\n\n  const handleAnnounce = (value) =>{\n    setAnnounceType(value);\n  };\n\n  const handleSignup = (value) =>{\n    setVisibleSignup(true);\n    setVisibleLogin(false);\n  };\n\n  const handleLogin = (value) =>{\n    setVisibleSignup(false);\n    setVisibleLogin(true);\n  };\n\n  const fetchIngredient = () => {\n    fetch(\"https://dippr-api-development.herokuapp.com/api/ingredients\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      const ingredients = response.data;\n      const array_ingredients = []\n        ingredients.forEach(element =>{\n          array_ingredients.push(element);\n          }\n        )\n      setIngredients(array_ingredients)\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const fetchTag = () => {\n    fetch(\"https://dippr-api-development.herokuapp.com/api/tags\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      const tag = response.data;\n      const array_tags = []\n        tag.forEach(element =>{\n          array_tags.push(element);\n          }\n        )\n      setTags(array_tags)\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch(`https://dippr-api-development.herokuapp.com/api/users/${user.id}/user_dishes`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": JSON.stringify(data)\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      currentIngredients.forEach(element =>{\n        handleIngredients(response.data.id, element.id );\n      })\n      currentTags.forEach(element =>{\n        handleTags(response.data.id, element.id );\n      })\n      {(announceType === 0 || announceType === 1) && handleMarketDish(response.data.id)}\n      handleFileUpload(response.data.id)\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const handleMarketDish = (dish) => {\n    fetch(`https://dippr-api-development.herokuapp.com/api/users/${user.id}/market_dishes`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": JSON.stringify({\n        user_dish_id: dish,\n        market_dish_type: announceType,\n        end_date: date\n        }\n      )\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const handleFileUpload = (user_dish_id) => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    fetch(`https://dippr-api-development.herokuapp.com/api/users/${user.id}/user_dishes/${user_dish_id}`, {\n      \"method\": \"PUT\",\n      \"headers\": {\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": formData\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      console.log(response)\n    }).catch(error => {\n      console.log(error)\n    }).finally(() => {\n      handlePublishSuccess();\n      handleClose();\n    })\n  };\n\n  const handleIngredients = (dish, ingredient) => {\n    fetch(`https://dippr-api-development.herokuapp.com/api/user_dish_ingredients`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": JSON.stringify(\n        {\n          user_dish_ingredient: {\n            user_dish_id: dish,\n            ingredient_id: ingredient\n          }\n        }\n      )\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const handleTags = (dish, tags) => {\n    fetch(`https://dippr-api-development.herokuapp.com/api/user_dish_tags`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": JSON.stringify(\n        {\n          user_dish_tag: {\n            user_dish_id: dish,\n            tag_id: tags\n          }\n        }\n      )\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const dateContent = () => (\n      <TextField\n      id=\"date\"\n      label=\"Date limite\"\n      value = {date}\n      type=\"date\"\n      className={classes.textField}\n      onChange={handleDate}\n      InputLabelProps={{\n        shrink: true,\n      }}\n    />\n  )\n\n  const announceContent = () => (\n    <>\n    {announceType === 0 && <h5>Proposer un troc</h5>}\n    {announceType === 1 && <h5>Proposer un don</h5>}\n    {announceType === 2 && <h5>Proposer une spécialité</h5>}\n\n    <ButtonGroup fullWidth size=\"small\" className=\"react-switch\" color=\"primary\" aria-label=\"outlined primary button group\">\n      <Button onClick={()=>handleAnnounce(0)}>\n        Publier un troc\n      </Button>\n      <Button onClick={()=>handleAnnounce(1)}>\n        Publier un don\n      </Button>\n      <Button onClick={()=>handleAnnounce(2)}>\n        Ajouter une spécialité\n      </Button>\n    </ButtonGroup>\n    <TextField\n      required\n      autoFocus\n      margin=\"dense\"\n      id=\"name\"\n      label=\"Titre\"\n      type=\"text\"\n      onChange={ e => setName(e.target.value) }\n      fullWidth\n      />\n      <br/>\n    <TextField\n        id=\"outlined-required\"\n        label=\"Description\"\n        required\n        autoFocus\n        multiline\n        fullWidth\n        rows={2}\n        rowsMax={4}\n        onChange={ e => setDescription(e.target.value) }\n      />\n      <br/>\n      <br/>\n      {ingredients.length !==0 && <SearchBar content={ ingredients } title=\"Ingredients\" data={(content=>handleIngredientData(content))}/>}\n      <br/>\n      {tags.length !==0  && <SearchBar content={ tags } title=\"Type de plat\" data={(content=>handleTagData(content))}/>}\n      <br/>\n      <ButtonGroup size=\"small\" className=\"react-switch\" color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={()=>imageSrc.current}>\n            <label htmlFor=\"icon-button-file\">\n              <IconButton color=\"primary\" className={classes.button} component=\"span\">\n                {isMobile? <PhotoCameraIcon/> : <PublishIcon/>}\n                {file && <CheckCircleIcon style={{color: \"green\",}}/> }\n              </IconButton>\n            </label>        \n          </Button>\n      </ButtonGroup>\n      {(announceType === 0 || announceType === 1) && dateContent()}\n      <InputBase accept=\"image/*\" id=\"icon-button-file\" type=\"file\"  hidden ref={imageSrc} onChange={handleFile}/>\n      </>\n    );\n\n  const announceAction = () => (\n    <>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        Annuler\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        endIcon={<SendIcon/>}\n        onClick={handleSubmit}\n        style={{ height: 50 }}\n      >\n        Poster mon annonce\n      </Button>\n      </DialogActions>\n    </>\n  )\n\n  const loginContent = () => (\n    <>\n      {visibleLogin && <Connection signup={()=>handleSignup(true)} isModal={true}/>}\n      {visibleSignup && <Signup login={()=>handleLogin(true)} isModal={true}/>}\n    </>\n  )\n\n  const handleIngredientData = (content) =>{\n    setCurrentIngredients(content);\n  }\n\n  const handleTagData = (content) =>{\n    setCurrentTags(content);\n  }\n\n  useEffect(() => {\n    fetchIngredient();\n    fetchTag();\n  }, []);\n\n  return(\n      <div className={classes.root}>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogContent>\n          {(user === undefined || user.length === 0) && loginContent()}\n          {(user !== undefined && user.length !== 0) && announceContent()}\n        </DialogContent>\n          {(user !== undefined && user.length !== 0) && announceAction()}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Announcement;\n","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/Autocomplete/index.jsx",["147","148","149"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/App.js",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Signup/index.jsx",["150","151","152","153","154","155","156"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/Map/index.jsx",[],{"ruleId":"157","severity":1,"message":"158","line":21,"column":7,"nodeType":"159","messageId":"160","endLine":21,"endColumn":12},{"ruleId":"157","severity":1,"message":"161","line":2,"column":26,"nodeType":"159","messageId":"160","endLine":2,"endColumn":35},{"ruleId":"157","severity":1,"message":"162","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":21},{"ruleId":"157","severity":1,"message":"163","line":12,"column":8,"nodeType":"159","messageId":"160","endLine":12,"endColumn":24},{"ruleId":"157","severity":1,"message":"164","line":13,"column":8,"nodeType":"159","messageId":"160","endLine":13,"endColumn":16},{"ruleId":"157","severity":1,"message":"165","line":45,"column":10,"nodeType":"159","messageId":"160","endLine":45,"endColumn":15},{"ruleId":"157","severity":1,"message":"166","line":45,"column":17,"nodeType":"159","messageId":"160","endLine":45,"endColumn":25},{"ruleId":"157","severity":1,"message":"167","line":46,"column":17,"nodeType":"159","messageId":"160","endLine":46,"endColumn":25},{"ruleId":"157","severity":1,"message":"168","line":50,"column":9,"nodeType":"159","messageId":"160","endLine":50,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":69,"column":7,"nodeType":"171","messageId":"172","endLine":69,"endColumn":57},{"ruleId":"169","severity":1,"message":"170","line":81,"column":5,"nodeType":"171","messageId":"172","endLine":81,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":93,"column":13,"nodeType":"175","endLine":93,"endColumn":66},{"ruleId":"176","severity":1,"message":"177","line":54,"column":6,"nodeType":"178","endLine":54,"endColumn":27,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":57,"column":5,"nodeType":"182","messageId":"183","endLine":64,"endColumn":6},{"ruleId":"176","severity":1,"message":"184","line":190,"column":6,"nodeType":"178","endLine":190,"endColumn":34,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":206,"column":76,"nodeType":"188","messageId":"189","endLine":206,"endColumn":78},{"ruleId":"190","severity":1,"message":"191","line":434,"column":13,"nodeType":"175","endLine":434,"endColumn":145},{"ruleId":"186","severity":1,"message":"192","line":441,"column":42,"nodeType":"188","messageId":"189","endLine":441,"endColumn":44},{"ruleId":"186","severity":1,"message":"187","line":456,"column":42,"nodeType":"188","messageId":"189","endLine":456,"endColumn":44},{"ruleId":"186","severity":1,"message":"192","line":463,"column":40,"nodeType":"188","messageId":"189","endLine":463,"endColumn":42},{"ruleId":"186","severity":1,"message":"187","line":478,"column":40,"nodeType":"188","messageId":"189","endLine":478,"endColumn":42},{"ruleId":"157","severity":1,"message":"193","line":94,"column":20,"nodeType":"159","messageId":"160","endLine":94,"endColumn":31},{"ruleId":"157","severity":1,"message":"194","line":2,"column":16,"nodeType":"159","messageId":"160","endLine":2,"endColumn":25},{"ruleId":"176","severity":1,"message":"195","line":124,"column":6,"nodeType":"178","endLine":124,"endColumn":8,"suggestions":"196"},{"ruleId":"186","severity":1,"message":"187","line":175,"column":46,"nodeType":"188","messageId":"189","endLine":175,"endColumn":48},{"ruleId":"186","severity":1,"message":"187","line":224,"column":44,"nodeType":"188","messageId":"189","endLine":224,"endColumn":46},{"ruleId":"157","severity":1,"message":"161","line":1,"column":27,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"197","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":17},{"ruleId":"157","severity":1,"message":"198","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":12},{"ruleId":"157","severity":1,"message":"199","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":19},{"ruleId":"157","severity":1,"message":"200","line":12,"column":8,"nodeType":"159","messageId":"160","endLine":12,"endColumn":25},{"ruleId":"157","severity":1,"message":"201","line":14,"column":8,"nodeType":"159","messageId":"160","endLine":14,"endColumn":18},{"ruleId":"157","severity":1,"message":"202","line":15,"column":8,"nodeType":"159","messageId":"160","endLine":15,"endColumn":37},{"ruleId":"157","severity":1,"message":"203","line":16,"column":8,"nodeType":"159","messageId":"160","endLine":16,"endColumn":28},{"ruleId":"157","severity":1,"message":"204","line":38,"column":10,"nodeType":"159","messageId":"160","endLine":38,"endColumn":23},{"ruleId":"157","severity":1,"message":"205","line":38,"column":25,"nodeType":"159","messageId":"160","endLine":38,"endColumn":41},{"ruleId":"186","severity":1,"message":"187","line":54,"column":23,"nodeType":"188","messageId":"189","endLine":54,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":57,"column":13,"nodeType":"175","endLine":57,"endColumn":137},{"ruleId":"173","severity":1,"message":"174","line":89,"column":13,"nodeType":"175","endLine":89,"endColumn":137},{"ruleId":"186","severity":1,"message":"187","line":117,"column":21,"nodeType":"188","messageId":"189","endLine":117,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":120,"column":13,"nodeType":"175","endLine":120,"endColumn":137},{"ruleId":"173","severity":1,"message":"174","line":149,"column":11,"nodeType":"175","endLine":149,"endColumn":135},{"ruleId":"176","severity":1,"message":"206","line":30,"column":5,"nodeType":"178","endLine":30,"endColumn":7,"suggestions":"207"},{"ruleId":"157","severity":1,"message":"161","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"208","line":1,"column":28,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"209","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"210","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":11},{"ruleId":"157","severity":1,"message":"211","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":19},{"ruleId":"176","severity":1,"message":"212","line":33,"column":8,"nodeType":"178","endLine":33,"endColumn":10,"suggestions":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"157","severity":1,"message":"218","line":36,"column":10,"nodeType":"159","messageId":"160","endLine":36,"endColumn":24},{"ruleId":"169","severity":1,"message":"170","line":153,"column":7,"nodeType":"171","messageId":"172","endLine":153,"endColumn":89},{"ruleId":"157","severity":1,"message":"219","line":6,"column":23,"nodeType":"159","messageId":"160","endLine":6,"endColumn":38},{"ruleId":"157","severity":1,"message":"220","line":7,"column":25,"nodeType":"159","messageId":"160","endLine":7,"endColumn":41},{"ruleId":"157","severity":1,"message":"221","line":8,"column":10,"nodeType":"159","messageId":"160","endLine":8,"endColumn":18},{"ruleId":"157","severity":1,"message":"222","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":18},{"ruleId":"157","severity":1,"message":"167","line":42,"column":17,"nodeType":"159","messageId":"160","endLine":42,"endColumn":25},{"ruleId":"157","severity":1,"message":"165","line":44,"column":10,"nodeType":"159","messageId":"160","endLine":44,"endColumn":15},{"ruleId":"157","severity":1,"message":"166","line":44,"column":17,"nodeType":"159","messageId":"160","endLine":44,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":53,"column":5,"nodeType":"171","messageId":"172","endLine":53,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":71,"column":7,"nodeType":"171","messageId":"172","endLine":71,"endColumn":53},{"ruleId":"173","severity":1,"message":"174","line":88,"column":11,"nodeType":"175","endLine":88,"endColumn":64},"no-unused-vars","'swUrl' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'alert' is assigned a value but never used.","'setAlert' is assigned a value but never used.","'setModal' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeCategory'. Either include it or remove the dependency array.","ArrayExpression",["223"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'dishID' and 'fetchUserTransactions'. Either include them or remove the dependency array.",["224"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","Expected '!==' and instead saw '!='.","'setCardType' is assigned a value but never used.","'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUserTransactions'. Either include it or remove the dependency array.",["225"],"'PropTypes' is defined but never used.","'List' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContentText' is defined but never used.","'PersonIcon' is defined but never used.","'SentimentVeryDissatisfiedIcon' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'selectedValue' is assigned a value but never used.","'setSelectedValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["226"],"'useState' is defined but never used.","'Loader' is defined but never used.","'Map' is defined but never used.","'dishSearch1' is defined but never used.","React Hook useEffect has a missing dependency: 'isIOS'. Either include it or remove the dependency array.",["227"],"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"'publishSuccess' is assigned a value but never used.","'setCurrentTitle' is assigned a value but never used.","'setCurrentValues' is assigned a value but never used.","'elements' is assigned a value but never used.","'Redirect' is defined but never used.",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [categoryValue, changeCategory, data]",{"range":"240","text":"241"},"Update the dependencies array to be: [isSuccess, isCancelSuccess, dishID, fetchUserTransactions]",{"range":"242","text":"243"},"Update the dependencies array to be: [fetchUserTransactions]",{"range":"244","text":"245"},"Update the dependencies array to be: [user.id]",{"range":"246","text":"247"},"Update the dependencies array to be: [isIOS]",{"range":"248","text":"249"},[1716,1737],"[categoryValue, changeCategory, data]",[5117,5145],"[isSuccess, isCancelSuccess, dishID, fetchUserTransactions]",[3780,3782],"[fetchUserTransactions]",[883,885],"[user.id]",[1017,1019],"[isIOS]"]