[{"/home/thibaultclerc/NEXT/DIPPR/dippr/src/serviceWorkerRegistration.js":"1","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/AppBar/index.jsx":"2","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MarketDish/index.jsx":"3","/home/thibaultclerc/NEXT/DIPPR/dippr/src/store/actions/index.jsx":"4","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/Map/index.jsx":"5","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/Layout/index.jsx":"6","/home/thibaultclerc/NEXT/DIPPR/dippr/src/reportWebVitals.js":"7","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Signup/index.jsx":"8","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Swap/index.jsx":"9","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Announcement/index.jsx":"10","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UserDishCard/index.jsx":"11","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/DeviceDetect/index.jsx":"12","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Login/index.jsx":"13","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/DishCard/index.jsx":"14","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UserDishes/index.jsx":"15","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Dish/index.jsx":"16","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/EditProfile/index.jsx":"17","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Profile/index.jsx":"18","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Search/index.jsx":"19","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UI/SimpleCard/index.jsx":"20","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/PrivateRoute/index.jsx":"21","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UI/Stars/index.jsx":"22","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Search/SearchResults/index.jsx":"23"},{"size":5116,"mtime":1607955891980,"results":"24","hashOfConfig":"25"},{"size":9767,"mtime":1608111360560,"results":"26","hashOfConfig":"25"},{"size":5704,"mtime":1608168582690,"results":"27","hashOfConfig":"25"},{"size":250,"mtime":1607681528330,"results":"28","hashOfConfig":"25"},{"size":2277,"mtime":1607956456930,"results":"29","hashOfConfig":"25"},{"size":1773,"mtime":1608132396380,"results":"30","hashOfConfig":"25"},{"size":364,"mtime":1607955891980,"results":"31","hashOfConfig":"25"},{"size":2524,"mtime":1608155771880,"results":"32","hashOfConfig":"25"},{"size":2426,"mtime":1608073551230,"results":"33","hashOfConfig":"25"},{"size":8707,"mtime":1608155716610,"results":"34","hashOfConfig":"25"},{"size":660,"mtime":1607733724310,"results":"35","hashOfConfig":"25"},{"size":451,"mtime":1607733724310,"results":"36","hashOfConfig":"25"},{"size":2577,"mtime":1608155734310,"results":"37","hashOfConfig":"25"},{"size":4360,"mtime":1608156323850,"results":"38","hashOfConfig":"25"},{"size":2733,"mtime":1608155678960,"results":"39","hashOfConfig":"25"},{"size":4831,"mtime":1608155725260,"results":"40","hashOfConfig":"25"},{"size":6986,"mtime":1608155729650,"results":"41","hashOfConfig":"25"},{"size":3016,"mtime":1608155740700,"results":"42","hashOfConfig":"25"},{"size":3245,"mtime":1608155745020,"results":"43","hashOfConfig":"25"},{"size":957,"mtime":1607939957130,"results":"44","hashOfConfig":"25"},{"size":576,"mtime":1607681528320,"results":"45","hashOfConfig":"25"},{"size":564,"mtime":1607985050010,"results":"46","hashOfConfig":"25"},{"size":2233,"mtime":1608156471630,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"15j1p5p",{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/thibaultclerc/NEXT/DIPPR/dippr/src/serviceWorkerRegistration.js",["104"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nconst swUrl = `${process.env.PUBLIC_URL}/sw.js` \n\n\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n",["105","106"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/AppBar/index.jsx",["107","108","109","110","111","112"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cookies from \"js-cookie\";\nimport { logoutUser } from '../../store/actions'\nimport { Link, useHistory } from \"react-router-dom\";\nimport  Announcement from '../../pages/Announcement'\nimport useDebouncedEffect from 'use-debounced-effect-hook'\n\n// Material UI\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport clsx from 'clsx';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InputBase from '@material-ui/core/InputBase';\nimport Alert from '@material-ui/lab/Alert';\n\n// Icons\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport RestaurantIcon from '@material-ui/icons/Restaurant'\nimport StarIcon from '@material-ui/icons/Star'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport HomeIcon from '@material-ui/icons/Home';\nimport MessageIcon from '@material-ui/icons/Message';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: '0 auto',\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },inputInput: {\n    padding: theme.spacing(3, 3, 3, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n  },\n}));\n\nexport default function BottomAppBar() {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user.user);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [announce, setAnnounce] = useState(null);\n  const [data, setData] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [publishSuccess, setPublishSuccess] = useState(null)\n  const history = useHistory();\n  const [state, setState] = useState({\n    bottom: false,\n    top: false,\n  });\n\n  const classes = useStyles();\n\n  const handleClick = () => {\n    Cookies.remove('token');\n    dispatch(logoutUser())\n  };\n\n  const handleChange = (e) => {\n    setSearchTerm(e.target.value)\n  };\n\n  useDebouncedEffect(() => {\n    if (searchTerm !== \"\") {\n      history.push({\n        pathname: '/search/',\n        search: searchTerm\n      });\n    }\n  },\n  [ searchTerm ],\n    1000\n  );\n\n  useEffect(() => {\n    if (searchTerm.length < 2) {\n      return\n    }\n    if (searchTerm !== \"\") {\n      history.push({\n        pathname: '/search/'\n      });\n    }\n  }, [searchTerm])\n\n\n  const handleModalChange = () => {\n    setAnnounce(true);\n  }\n\n  const handleAddAnnounce = () => {\n    setAnnounce(false)\n  };\n\n  const handlePublishSuccess = () => {\n    setPublishSuccess(true);\n  };\n\n  const successAlert = () =>(\n    <Alert onClose={() =>setPublishSuccess(false)} severity=\"success\">Votre plat est bien enregistré !</Alert>\n  );\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n  \n\n  const listLogin = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]:  anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem button component={Link} to={`/profile/${user.id}`}>\n          <ListItemIcon> <AccountCircleIcon /></ListItemIcon>\n          <ListItemText primary={\"Profile\"} />\n        </ListItem>\n\n        <ListItem  button component={Link} to=\"/\" >\n          <ListItemIcon> <SettingsIcon /></ListItemIcon>\n          <ListItemText primary={\"Paramètre Compte\"} />\n        </ListItem>\n\n        <ListItem  button component={Link} to=\"/\" >\n          <ListItemIcon> <RestaurantIcon /></ListItemIcon>\n          <ListItemText primary={\"Mes plats\"} />\n        </ListItem>\n\n        <ListItem  button component={Link} to=\"/\" >\n          <ListItemIcon> <StarIcon/></ListItemIcon>\n          <ListItemText primary={\"Favoris\"} />\n        </ListItem>\n\n        <ListItem  button component={Link} to=\"/\" >\n          <ListItemIcon> <MessageIcon/></ListItemIcon>\n          <ListItemText primary={\"Messages\"} />\n        </ListItem>\n\n      </List>\n\n      <Divider />\n      <List>\n          <ListItem  button component={Link} to=\"/\" onClick={(e) => handleClick()}>\n            <ListItemIcon > <ExitToAppIcon /></ListItemIcon>\n            <ListItemText primary={\"Se Déconnecter\"} />\n          </ListItem>\n      </List>\n    </div>\n  );\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]:  anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n\n      <List  key=\"list-1\">\n          <ListItem  button component={Link} to=\"/signin\" key=\"signin\">\n            <ListItemIcon> <AccountCircleIcon /></ListItemIcon>\n            <ListItemText primary={\"Se Connecter\"}/>\n          </ListItem>\n\n\n          <ListItem  button component={Link} to=\"/signup\" key=\"signup\">\n            <ListItemIcon > <ExitToAppIcon /></ListItemIcon>\n            <ListItemText primary={\"S'inscrire\"} />\n          </ListItem>\n\n      </List>\n    </div>\n  );\n\n  const searchBar = () => (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder=\"Rechercher des plats...\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n        onChange={e => handleChange(e)}\n        value={searchTerm}\n      /> \n    </div>\n  );\n\n  useEffect(() => {\n  }, [announce])\n\n  return (\n    <div>\n      {publishSuccess && successAlert()}\n    {announce && <Announcement value={announce} visibleModal={(()=>handleAddAnnounce(false))} Alert={publishSuccess} visibleAlert={content=>handlePublishSuccess(content)}/> }\n    {['top', 'bottom'].map((anchor) => (\n    <React.Fragment>\n      <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n\n            {state.bottom && (user.length !== 0? listLogin('bottom') : list('bottom'))}\n            {state.top && searchBar('top')}\n      </SwipeableDrawer>\n      <CssBaseline />\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n\n        <IconButton color=\"inherit\" button=\"true\" component={Link} to=\"/\">\n            <HomeIcon fontSize =\"default\"/>\n          </IconButton>\n\n          {user.length !== 0?(\n            <IconButton color=\"inherit\" button=\"true\" component={Link} to=\"/users/swap\">\n              <ShoppingBasket fontSize =\"default\" />\n            </IconButton>\n          ):\"\"}\n\n          {user.length !==0?(\n                    <IconButton edge=\"end\" color=\"inherit\"  button=\"true\" component={Link} to=\"/users/dish\">\n                      <RestaurantIcon fontSize =\"default\"/>\n                    </IconButton>\n          )\n          :\"\"}\n\n            <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}  onClick={handleModalChange}>\n              <AddIcon fontSize =\"default\"/>\n            </Fab>\n\n          <div className={classes.grow} />\n\n          {user.length !== 0?(\n            <IconButton color=\"inherit\" button=\"true\" component={Link} to=\"/\">\n              <MessageIcon fontSize =\"default\" />\n            </IconButton>\n          ):\"\"}\n\n          <IconButton color=\"inherit\" onClick={toggleDrawer('top', true)}>\n            <SearchIcon fontSize =\"default\"/>\n          </IconButton>\n\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" id=\"simple-menu\"  onClick={toggleDrawer('bottom', true)}>\n            <MenuIcon fontSize =\"default\"/>\n          </IconButton>\n\n\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n      ))}\n  </div>\n  );\n}\n",["113","114"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/MarketDish/index.jsx",["115","116","117","118"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/store/actions/index.jsx",[],["119","120"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/Map/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/Layout/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/reportWebVitals.js",[],["121","122"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Signup/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Swap/index.jsx",["123","124","125","126","127"],"import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport StoreIcon from '@material-ui/icons/Store';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Grid, Button, ButtonGroup } from '@material-ui/core';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },  grow: {\n    flexGrow: 1,\n  }\n}));\n\nconst Swap = ()=> {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Grid container item justify='center' alignItems='center'>\n\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"scrollable force tabs example\"\n        >\n          \n          <Tab label=\"Mes demandes\" icon={<StoreIcon />} {...a11yProps(0)} />\n          <Tab label=\"Ma Wishlist\" icon={<FavoriteIcon />} {...a11yProps(1)} />\n        </Tabs>\n        </Grid>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        Item One\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Item Two\n      </TabPanel>\n    </div>\n  );\n}\n\nexport default Swap","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Announcement/index.jsx",["128"],"import React, { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport SearchBar from '../../components/Autocomplete'\nimport SendIcon from '@material-ui/icons/Send';\nimport Cookies from 'js-cookie'\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Connection from '../../pages/Login'\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { Button, ButtonGroup, Dialog, DialogActions, DialogContent, InputBase, IconButton  } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport useDeviceDetect from '../../components/DeviceDetect'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Announcement = ({value, visibleModal, alert, visibleAlert}) => {\n  const classes = useStyles();\n  const { isMobile } = useDeviceDetect();\n  const [ingredients, setIngredients] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [open, setOpen] = React.useState(value);\n  const [publishSuccess, setPublishSuccess] = React.useState(alert)\n  const [file, setFile] = React.useState(null)\n  const imageSrc = React.useRef(null)\n\n\n  const user = useSelector(state => state.user.user);\n  const [currentTags, setCurrentTags] = useState([]);\n  const [currentIngredients, setCurrentIngredients] = useState([]);\n\n\n\n  const data = {\n      name: name,\n      description: description\n  };\n\n  useEffect(() => {\n  }, [isMobile])\n\n  const handlePublishSuccess = () => {\n    setPublishSuccess(true);\n    visibleAlert(true)\n  };\n\n  const handleClose = () => {\t\n    setOpen(false);\t\n    visibleModal(false)\t\n  };\n\n  const handleFile = ({target}) =>{\n    setFile(target.files[0]);\n  };\n\n  const fetchIngredient = () => {\n    fetch(\"https://dippr-api-development.herokuapp.com/api/ingredients\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      const ingredients = response.data;\n      const array_ingredients = []\n        ingredients.forEach(element =>{\n          array_ingredients.push(element);\n          }\n        )\n      setIngredients(array_ingredients)\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const fetchTag = () => {\n    fetch(\"https://dippr-api-development.herokuapp.com/api/tags\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      const tag = response.data;\n      const array_tags = []\n        tag.forEach(element =>{\n          array_tags.push(element);\n          }\n        )\n      setTags(array_tags)\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(data.file)\n    fetch(`https://dippr-api-development.herokuapp.com/api/users/${user.id}/user_dishes`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": JSON.stringify(data)\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      currentIngredients.forEach(element =>{\n        handleIngredients(response.data.id, element.id );\n      })\n      currentTags.forEach(element =>{\n        handleTags(response.data.id, element.id );\n      })\n      handleFileUpload(response.data.id)\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const handleFileUpload = (user_dish_id) => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    fetch(`https://dippr-api-development.herokuapp.com/api/users/${user.id}/user_dishes/${user_dish_id}`, {\n      \"method\": \"PUT\",\n      \"headers\": {\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": formData\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      console.log(response)\n    }).catch(error => {\n      console.log(error)\n    }).finally(() => {\n      handlePublishSuccess();\n      handleClose();\n    })\n  };\n\n  const handleIngredients = (dish, ingredient) => {\n    fetch(`https://dippr-api-development.herokuapp.com/api/user_dish_ingredients`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": JSON.stringify(\n        \n        {\n          user_dish_ingredient: {\n            user_dish_id: dish,\n            ingredient_id: ingredient\n          }\n        }\n      )\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const handleTags = (dish, tags) => {\n    fetch(`https://dippr-api-development.herokuapp.com/api/user_dish_tags`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": JSON.stringify(\n        \n        {\n          user_dish_tag: {\n            user_dish_id: dish,\n            tag_id: tags\n          }\n        }\n      )\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const announceContent = () => (\n    <>\n    <h5>Proposer un plat</h5>\n\n    <ButtonGroup fullWidth size=\"small\" className=\"react-switch\" color=\"primary\" aria-label=\"outlined primary button group\">\n      <Button onClick={()=>console.log(\"Hello\")}>\n        Publier une annonce\n      </Button>\n      <Button onClick={()=>console.log(\"Hello\")}>\n        Ajouter une spécialité\n      </Button>\n    </ButtonGroup>\n\n    <TextField\n      required\n      autoFocus\n      margin=\"dense\"\n      id=\"name\"\n      label=\"Titre\"\n      type=\"text\"\n      onChange={ e => setName(e.target.value) }\n      fullWidth\n      />\n      <br/>\n    <TextField\n        id=\"outlined-required\"\n        label=\"Description\"\n        required\n        autoFocus\n        multiline\n        fullWidth\n        rows={2}\n        rowsMax={4}\n        onChange={ e => setDescription(e.target.value) }\n      />\n      <br/>\n      <br/>\n      {ingredients.length !==0 && <SearchBar content={ ingredients } title=\"Ingredients\" data={(content=>handleIngredientData(content))}/>}\n      <br/>\n      {tags.length !==0  && <SearchBar content={ tags } title=\"Type de plat\" data={(content=>handleTagData(content))}/>}\n      <br/>\n\n      <ButtonGroup size=\"small\" className=\"react-switch\" color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={()=>imageSrc.current}>\n            <label htmlFor=\"icon-button-file\">\n              <IconButton color=\"primary\" className={classes.button} component=\"span\">\n                {isMobile? <PhotoCameraIcon/> : <PublishIcon/>}\n                {file && <CheckCircleIcon style={{color: \"green\",}}/> }\n              </IconButton>\n            </label>        \n          </Button>\n      </ButtonGroup>\n\n      <InputBase accept=\"image/*\" id=\"icon-button-file\" type=\"file\"  hidden ref={imageSrc} onChange={handleFile}/>\n      </>\n    );\n\n  const announceAction = () => (\n    <>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        Annuler\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        endIcon={<SendIcon/>}\n        onClick={handleSubmit}\n        style={{ height: 50 }}\n      >\n        Poster mon annonce\n      </Button>\n      </DialogActions>\n    </>\n  )\n\n  const loginContent = () => (\n    <>\n      <h5>Connectes-toi et propose ta spécialité</h5>\n      <Connection/>\n    </>\n\n  );\n\n  const handleIngredientData = (content) =>{\n    setCurrentIngredients(content)\n  }\n\n  const handleTagData = (content) =>{\n    setCurrentTags(content)\n  }\n\n  useEffect(() => {\n    fetchIngredient();\n    fetchTag();\n  }, []);\n\n  useEffect(()=>{\n    console.log(file)\n  },[file])\n\n  return(\n      <div className={classes.root}>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogContent>\n          {user.length === 0 && loginContent()}\n          {user.length !== 0 && announceContent()}\n        </DialogContent>\n          {user.length !== 0 && announceAction()}\n      </Dialog>\n    </div>\n  )\n}\n\nexport default Announcement","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UserDishCard/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/DeviceDetect/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Login/index.jsx",["129"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/DishCard/index.jsx",["130","131","132"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UserDishes/index.jsx",["133","134","135","136","137","138","139","140","141"],"import Cookies from 'js-cookie'\nimport React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../../components/UI/Loader';\nimport {Link, useParams} from \"react-router-dom\";\nimport UserDishCard from '../UserDishCard'\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, description, rate, photo_url) {\n  return { name, description, rate, photo_url };\n}\n\nconst UserDishes = (profileId) => {\n\n    const [data, setData] = useState([])\n\n    const fetchData = (url) => {\n        fetch(url, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"Content-Type\": \"application/json\",\n            'Authorization': `${Cookies.get('token')}`\n          },\n        })\n        .then((response) => {\n          return response.json()\n        })\n        .then((response) => {\n          setData(response.data)\n        }).catch(error => {\n          console.log(error)\n        })\n      };\n\n      useEffect(() => {\n        fetchData(`https://dippr-api-development.herokuapp.com/api/users/${profileId.profileId}/user_dishes`)\n      }, []);\n\n      const rows = [];\n        data.map(dish => {\n          rows.push(\n            createData(dish.attributes.name, dish.attributes.description, dish.attributes.dish_rating, dish.attributes.photo_url) \n          );\n        })\n      \n\n      const classes = useStyles();\n\n    return (\n      <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Nom du plat </TableCell>\n            <TableCell align=\"left\">Description</TableCell>\n            <TableCell align=\"left\">Note</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"left\">{row.description}</TableCell>\n              <TableCell align=\"left\">{row.rate}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    );\n}\n\nexport default UserDishes","/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Dish/index.jsx",["142","143","144","145","146"],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/EditProfile/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Profile/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Search/index.jsx",["147","148"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom';\nimport SearchResults from './SearchResults';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MapIcon from '@material-ui/icons/Map';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { Grid, Button, ButtonGroup } from '@material-ui/core';\nimport './index.scss';\n\nconst Search = () => {\n  const location = useLocation();\n  const [filteredData, setFilteredData] = useState([]);\n  const [categoryValue, setCategoryValue] = useState(1);\n  const [listOrMaps, setListOrMaps] = useState(\"list\");\n  const [isSearching, setIsSearching] = useState(false);\n  const [data, setData] = useState([]);\n  const isMounted = useRef(false)\n\n  useEffect(\n    () => {\n      isMounted.current = true\n      if (location.search !== \"\") {\n        const query = location.search.split('?').pop()\n        setIsSearching(true);\n        fetch(`https://dippr-api-development.herokuapp.com/api/marketdishes/search?query=${query}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"Content-Type\": \"application/json\"\n          },\n        })\n        .then((response) => {\n          return response.json()\n        })\n        .then((response) => {\n          if (isMounted.current) {\n            console.log(response.data)\n            setData(response.data)\n          }\n        }).catch(error => {\n          console.log(error)\n        }).finally(() => {\n          if (isMounted.current) {\n            setIsSearching(false);\n          }\n        });\n      }\n    },\n    [location.search]\n  );\n\n  useEffect(() => {\n      changeCategory(categoryValue)\n  }, [categoryValue, data])\n\n  const changeCategory = (category) => {\n    switch(category) {\n      case 1:\n        setFilteredData(data.filter(dish => dish.attributes.market_dish_type === \"troc\"))\n        break;\n      case 2:\n        setFilteredData(data.filter(dish => dish.attributes.market_dish_type === \"donation\"))\n        break;\n    }\n  }\n\n  return (\n    <>\n    <Paper square>\n      <Grid container item justify='center' alignItems='center'>\n        <Tabs\n          value={categoryValue}\n          indicatorColor=\"primary\"\n          aria-label=\"disabled tabs example\"\n        >\n          <Tab value={1} label=\"Trocs\" onClick={(e) => setCategoryValue(1)} style={{outline: 'none'}}/>\n          <Tab value={2} label=\"Dons\" onClick={(e) => setCategoryValue(2)} style={{outline: 'none'}}/>\n        </Tabs>\n        <ButtonGroup size=\"small\" className=\"react-switch\" color=\"primary\" aria-label=\"outlined primary button group\">\n            <Button onClick={(e) => setListOrMaps(\"list\")}>\n              <FormatListBulletedIcon/>\n            </Button>\n            <Button onClick={(e) => setListOrMaps(\"map\")}>\n              <MapIcon/>\n            </Button>\n          </ButtonGroup>\n      </Grid>\n    </Paper>\n      {data.length > 0 &&\n        <> \n          <SearchResults\n              data={filteredData}\n              listOrMapValue={listOrMaps}\n              isSearching={isSearching}\n              className=\"searchResults\"\n          />\n        </>\n      }\n    </>\n  )\n}\n\nexport default Search\n","/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UI/SimpleCard/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/PrivateRoute/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/components/UI/Stars/index.jsx",[],"/home/thibaultclerc/NEXT/DIPPR/dippr/src/pages/Search/SearchResults/index.jsx",["149","150"],{"ruleId":"151","severity":1,"message":"152","line":21,"column":7,"nodeType":"153","messageId":"154","endLine":21,"endColumn":12},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":75,"column":3,"nodeType":"161","messageId":"162","endLine":75,"endColumn":7},{"ruleId":"151","severity":1,"message":"163","line":118,"column":10,"nodeType":"153","messageId":"154","endLine":118,"endColumn":14},{"ruleId":"151","severity":1,"message":"164","line":118,"column":16,"nodeType":"153","messageId":"154","endLine":118,"endColumn":23},{"ruleId":"151","severity":1,"message":"165","line":119,"column":10,"nodeType":"153","messageId":"154","endLine":119,"endColumn":21},{"ruleId":"151","severity":1,"message":"166","line":119,"column":23,"nodeType":"153","messageId":"154","endLine":119,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":159,"column":6,"nodeType":"169","endLine":159,"endColumn":18,"suggestions":"170"},{"ruleId":"155","replacedBy":"171"},{"ruleId":"157","replacedBy":"172"},{"ruleId":"151","severity":1,"message":"173","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":17},{"ruleId":"151","severity":1,"message":"174","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":15},{"ruleId":"167","severity":1,"message":"175","line":131,"column":6,"nodeType":"169","endLine":131,"endColumn":8,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":147,"column":13,"nodeType":"179","endLine":147,"endColumn":97},{"ruleId":"155","replacedBy":"180"},{"ruleId":"157","replacedBy":"181"},{"ruleId":"155","replacedBy":"182"},{"ruleId":"157","replacedBy":"183"},{"ruleId":"151","severity":1,"message":"184","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"185","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"186","line":1,"column":38,"nodeType":"153","messageId":"154","endLine":1,"endColumn":44},{"ruleId":"151","severity":1,"message":"187","line":11,"column":16,"nodeType":"153","messageId":"154","endLine":11,"endColumn":22},{"ruleId":"151","severity":1,"message":"188","line":11,"column":24,"nodeType":"153","messageId":"154","endLine":11,"endColumn":35},{"ruleId":"151","severity":1,"message":"189","line":34,"column":10,"nodeType":"153","messageId":"154","endLine":34,"endColumn":24},{"ruleId":"151","severity":1,"message":"190","line":36,"column":9,"nodeType":"153","messageId":"154","endLine":36,"endColumn":13},{"ruleId":"151","severity":1,"message":"191","line":94,"column":10,"nodeType":"153","messageId":"154","endLine":94,"endColumn":18},{"ruleId":"151","severity":1,"message":"192","line":94,"column":20,"nodeType":"153","messageId":"154","endLine":94,"endColumn":31},{"ruleId":"151","severity":1,"message":"193","line":95,"column":20,"nodeType":"153","messageId":"154","endLine":95,"endColumn":31},{"ruleId":"151","severity":1,"message":"194","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":21},{"ruleId":"151","severity":1,"message":"187","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"151","severity":1,"message":"195","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":14},{"ruleId":"151","severity":1,"message":"196","line":6,"column":9,"nodeType":"153","messageId":"154","endLine":6,"endColumn":13},{"ruleId":"151","severity":1,"message":"197","line":6,"column":15,"nodeType":"153","messageId":"154","endLine":6,"endColumn":24},{"ruleId":"151","severity":1,"message":"198","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":20},{"ruleId":"151","severity":1,"message":"199","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":19},{"ruleId":"167","severity":1,"message":"200","line":53,"column":10,"nodeType":"169","endLine":53,"endColumn":12,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":56,"column":23,"nodeType":"204","messageId":"205","endLine":56,"endColumn":25},{"ruleId":"151","severity":1,"message":"186","line":1,"column":38,"nodeType":"153","messageId":"154","endLine":1,"endColumn":44},{"ruleId":"151","severity":1,"message":"187","line":11,"column":16,"nodeType":"153","messageId":"154","endLine":11,"endColumn":22},{"ruleId":"151","severity":1,"message":"188","line":11,"column":24,"nodeType":"153","messageId":"154","endLine":11,"endColumn":35},{"ruleId":"167","severity":1,"message":"206","line":146,"column":6,"nodeType":"169","endLine":146,"endColumn":8,"suggestions":"207"},{"ruleId":"167","severity":1,"message":"208","line":151,"column":6,"nodeType":"169","endLine":151,"endColumn":12,"suggestions":"209"},{"ruleId":"167","severity":1,"message":"210","line":55,"column":6,"nodeType":"169","endLine":55,"endColumn":27,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":58,"column":5,"nodeType":"214","messageId":"215","endLine":65,"endColumn":6},{"ruleId":"151","severity":1,"message":"184","line":1,"column":28,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"216","line":65,"column":6,"nodeType":"169","endLine":65,"endColumn":12,"suggestions":"217"},"no-unused-vars","'swUrl' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-dupe-keys","Duplicate key 'list'.","ObjectExpression","unexpected","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'isSearching' is assigned a value but never used.","'setIsSearching' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["220"],["218"],["219"],"'borders' is defined but never used.","'Cookies' is defined but never used.","React Hook useEffect has a missing dependency: 'dishID'. Either include it or remove the dependency array.",["221"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["218"],["219"],["218"],["219"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'publishSuccess' is assigned a value but never used.","'user' is assigned a value but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'setCardType' is assigned a value but never used.","'useSelector' is defined but never used.","'Loader' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'UserDishCard' is defined but never used.","'CardColumns' is defined but never used.","React Hook useEffect has a missing dependency: 'profileId.profileId'. Either include it or remove the dependency array.",["222"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'marketData'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'changeCategory'. Either include it or remove the dependency array.",["225"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'displayRouter'. Either include it or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [history, searchTerm]",{"range":"241","text":"242"},"Update the dependencies array to be: [dishID]",{"range":"243","text":"244"},"Update the dependencies array to be: [profileId.profileId]",{"range":"245","text":"246"},"Update the dependencies array to be: [user.id]",{"range":"247","text":"248"},"Update the dependencies array to be: [data, marketData]",{"range":"249","text":"250"},"Update the dependencies array to be: [categoryValue, changeCategory, data]",{"range":"251","text":"252"},"Update the dependencies array to be: [data, displayRouter]",{"range":"253","text":"254"},[4213,4225],"[history, searchTerm]",[3060,3062],"[dishID]",[1636,1638],"[profileId.profileId]",[3851,3853],"[user.id]",[3932,3938],"[data, marketData]",[1755,1776],"[categoryValue, changeCategory, data]",[2088,2094],"[data, displayRouter]"]