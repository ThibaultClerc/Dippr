[{"/home/bakbledy93/NEXT/W11-12/Dippr/src/index.js":"1","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/Layout/index.jsx":"2","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/DeviceDetect/index.jsx":"3","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Signup/index.jsx":"4","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/UserDishes/index.jsx":"5","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/MyMarketDishes/index.jsx":"6","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/UserDishCard/index.jsx":"7","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/MyTransactions/TransactionDialog/index.jsx":"8","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/CheckoutProfile/AvatarCard.js":"9","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/CheckoutProfile/Avatar.js":"10","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/CheckoutProfile/Checkout.js":"11","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/CheckoutProfile/General.js":"12","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Home/UserHome/index.jsx":"13","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/AppBar/index.jsx":"14","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/MyTransactions/index.jsx":"15","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/DashboardAdmin/index.jsx":"16","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Home/VisitorHome/index.jsx":"17","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/Map/index.jsx":"18","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Swap/index.jsx":"19","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/UserList/index.jsx":"20","/home/bakbledy93/NEXT/W11-12/Dippr/src/store/actions/index.jsx":"21","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/MiniMap/index.jsx":"22","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/UI/Stars/index.jsx":"23","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Dish/index.jsx":"24","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Search/SearchResults/index.jsx":"25","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/PrivateRoute/index.jsx":"26","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Announcement/index.jsx":"27","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/MyMarketDishes/MyMarketDishesDisplay/index.jsx":"28","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/EditProfileAdmin/index.jsx":"29","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/InstallPwa/index.jsx":"30","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/Navbar/index.jsx":"31","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Profile/index.jsx":"32","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/EditProfile/index.jsx":"33","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/Snackbar/index.jsx":"34","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/AddressSearchBar/index.jsx":"35"},{"size":399,"mtime":1607948172077,"results":"36","hashOfConfig":"37"},{"size":1991,"mtime":1608662086527,"results":"38","hashOfConfig":"37"},{"size":451,"mtime":1607702405617,"results":"39","hashOfConfig":"37"},{"size":6614,"mtime":1608738397710,"results":"40","hashOfConfig":"37"},{"size":3368,"mtime":1608646300906,"results":"41","hashOfConfig":"37"},{"size":881,"mtime":1608646300918,"results":"42","hashOfConfig":"37"},{"size":660,"mtime":1607701011209,"results":"43","hashOfConfig":"37"},{"size":6711,"mtime":1608646300918,"results":"44","hashOfConfig":"37"},{"size":1951,"mtime":1608737319526,"results":"45","hashOfConfig":"37"},{"size":707,"mtime":1608721062818,"results":"46","hashOfConfig":"37"},{"size":6080,"mtime":1608829329663,"results":"47","hashOfConfig":"37"},{"size":1790,"mtime":1608829394991,"results":"48","hashOfConfig":"37"},{"size":6378,"mtime":1608735501949,"results":"49","hashOfConfig":"37"},{"size":8742,"mtime":1608646300894,"results":"50","hashOfConfig":"37"},{"size":14466,"mtime":1608646300918,"results":"51","hashOfConfig":"37"},{"size":2285,"mtime":1608221314546,"results":"52","hashOfConfig":"37"},{"size":3992,"mtime":1608221314546,"results":"53","hashOfConfig":"37"},{"size":2394,"mtime":1608646300902,"results":"54","hashOfConfig":"37"},{"size":2888,"mtime":1608646300922,"results":"55","hashOfConfig":"37"},{"size":4367,"mtime":1608646300906,"results":"56","hashOfConfig":"37"},{"size":250,"mtime":1608301781059,"results":"57","hashOfConfig":"37"},{"size":1717,"mtime":1608646300906,"results":"58","hashOfConfig":"37"},{"size":572,"mtime":1608646300906,"results":"59","hashOfConfig":"37"},{"size":4755,"mtime":1608646300914,"results":"60","hashOfConfig":"37"},{"size":3409,"mtime":1608646300918,"results":"61","hashOfConfig":"37"},{"size":576,"mtime":1607676854752,"results":"62","hashOfConfig":"37"},{"size":10597,"mtime":1608646300910,"results":"63","hashOfConfig":"37"},{"size":1553,"mtime":1608466506325,"results":"64","hashOfConfig":"37"},{"size":7270,"mtime":1608646300914,"results":"65","hashOfConfig":"37"},{"size":1887,"mtime":1607957025489,"results":"66","hashOfConfig":"37"},{"size":8198,"mtime":1608457959819,"results":"67","hashOfConfig":"37"},{"size":2948,"mtime":1608646300918,"results":"68","hashOfConfig":"37"},{"size":6634,"mtime":1608646300914,"results":"69","hashOfConfig":"37"},{"size":1545,"mtime":1608735233085,"results":"70","hashOfConfig":"37"},{"size":1593,"mtime":1608829400299,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"14d62wu",{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"79"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"79"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bakbledy93/NEXT/W11-12/Dippr/src/index.js",[],["154","155"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/Layout/index.jsx",["156"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/DeviceDetect/index.jsx",[],["157","158"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Signup/index.jsx",["159","160","161","162","163","164"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/UserDishes/index.jsx",["165","166","167","168","169","170"],"import Cookies from 'js-cookie'\nimport React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../../components/UI/Loader';\nimport {Link, useParams} from \"react-router-dom\";\nimport UserDishCard from '../UserDishCard'\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(id, name, description, rate, icon, photo_url) {\n  return { id, name, description, rate, icon, photo_url };\n}\n\nconst UserDishes = (profileId) => {\n  const classes = useStyles();\n  const user = useSelector(state => state.user.user);\n  const [data, setData] = useState([]);\n  const rows = [];\n\n  data.map(dish => {\n    rows.push(\n      createData(dish.id, dish.attributes.name, dish.attributes.description, dish.attributes.dish_rating, <DeleteForeverIcon/> ,dish.attributes.photo_url) \n    );\n  })\n\n  const fetchData = (url) => {\n    fetch(url, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        'Authorization': `${Cookies.get('token')}`\n      },\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      setData(response.data)\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  useEffect(() => {\n    if (user.attributes.is_admin === true ) {\n      fetchData(`https://dippr-api-production.herokuapp.com/api/user_dishes`)\n    } else {\n      fetchData(`https://dippr-api-production.herokuapp.com/api/users/${profileId.profileId}/user_dishes`)\n    }\n  }, []);\n      \n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n          <TableCell>Id </TableCell>\n            <TableCell>Nom du plat </TableCell>\n            <TableCell align=\"left\">Description</TableCell>\n            <TableCell align=\"left\">Note</TableCell>\n            {user.attributes.is_admin === true ? <TableCell align=\"left\">Supprimer</TableCell> : ''}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"left\">{row.description}</TableCell>\n              <TableCell align=\"left\">{row.rate}</TableCell>\n              {user.attributes.is_admin === true ? <TableCell align=\"left\"><Button key=\"btn-logout\" as={Link} to ={`/admin`} variant=\"outlined\" color=\"secondary\" >{row.icon}</Button></TableCell> : ''}\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default UserDishes;","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/MyMarketDishes/index.jsx",["171"],"import React, { useState, useEffect } from 'react'\nimport MyMarketDishesDisplay from './MyMarketDishesDisplay';\nimport { useSelector } from 'react-redux';\n\nconst MyMarketDishes = () => {\n  const [data, setData] = useState([]);\n  const user = useSelector(state => state.user.user);\n\n  useEffect(\n    () => {\n      fetch(`https://dippr-api-production.herokuapp.com/api/users/${user.id}/market_dishes`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"Content-Type\": \"application/json\"\n        },\n      })\n      .then((response) => {\n        return response.json()\n      })\n      .then((response) => {\n        setData(response.data)\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    []\n  );\n\n  return (\n    <>\n      <MyMarketDishesDisplay\n        data={data}\n        style={{marginTop: \"5em\"}}\n      />\n    </>\n  );\n};\n\nexport default MyMarketDishes;\n",["172","173"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/UserDishCard/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/MyTransactions/TransactionDialog/index.jsx",["174","175","176","177","178","179"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    \"&:focus\": {\n      backgroundColor:'#edf5ff',\n    },\n  },\n  submitBtn: {\n    marginTop: 10,\n    margin: 'auto',\n    display: 'block',\n    padding: 10\n  },\n  image: {\n    width: \"-webkit-fill-available\"\n  }\n}))\n\nconst TransactionDialog = ({open, handleSelectedValue, handleClose, transaction, answerer, caller, currentUser}) => {\n  const classes = useStyles();\n\n  const handleListItemClick = (userResponse) => {\n    if (userResponse !== null) {\n      handleSelectedValue(userResponse)\n      handleClose(false)\n    }\n  }\n\n  const handleModalClose = () => {\n    handleClose(false)\n  }\n\n  const handleItemDisplay = () => {\n    if (transaction.type === \"trocs\") {\n      if (answerer.id == currentUser.id) {\n        return (\n          <>\n            <img className={classes.image} src={`https://dippr-api-production.herokuapp.com${transaction.meta.caller_dish.photo_url}`}></img>\n            <ListItem key={transaction.id} button>\n              <ListItemAvatar>\n                <Avatar\n                  // alt={`Avatar n°${value + 1}`}\n                  // src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={transaction.id} primary={caller.first_name} />\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {caller.city}\n              </Typography>\n            </ListItem>\n            <DialogContent dividers>\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                {caller.first_name} souhaite échanger son {transaction.meta.caller_dish.name} contre votre \n                  {transaction.meta.answer_dish.name}\n              </Typography>\n            </DialogContent>\n            <MuiDialogActions>\n              <Button autoFocus onClick={() => handleListItemClick(1)} color=\"primary\">\n                ACCEPTER\n              </Button>\n              <Button autoFocus onClick={() => handleListItemClick(2)} color=\"secondary\">\n                REFUSER\n              </Button>\n            </MuiDialogActions>\n          </>\n        )\n      } else {\n        return (\n          <>\n            <img className={classes.image} src={`https://dippr-api-production.herokuapp.com${transaction.meta.answer_dish.photo_url}`}></img>\n            <ListItem key={transaction.id} button>\n              <ListItemAvatar>\n                <Avatar\n                  // alt={`Avatar n°${value + 1}`}\n                  // src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={transaction.id} primary={answerer.first_name} />\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {answerer.city}\n              </Typography>\n            </ListItem>\n            <DialogContent dividers>\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                Vous avez proposé votre {transaction.meta.caller_dish.name} à\n                {answerer.first_name} contre son  {transaction.meta.answer_dish.name}\n              </Typography>\n            </DialogContent>\n            <MuiDialogActions>\n              <Button autoFocus onClick={() => handleListItemClick(3)} color=\"secondary\">\n                ANNULER LA DEMANDE\n              </Button>\n            </MuiDialogActions>\n          </>\n        )\n      }\n    } else if (transaction.type === \"donations\") {\n      if (caller.id == currentUser.id) {\n        return (\n          <>\n            <img className={classes.image} src={`https://dippr-api-production.herokuapp.com${transaction.meta.answer_dish.photo_url}`}></img>\n            <ListItem key={transaction.id} button>\n              <ListItemAvatar>\n                <Avatar\n                  // alt={`Avatar n°${value + 1}`}\n                  // src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={transaction.id} primary={caller.first_name} />\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {caller.city}\n              </Typography>\n            </ListItem>\n            <DialogContent dividers>\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                Vous avez demandé à {answerer.first_name} son \n                {transaction.meta.answer_dish.name}\n              </Typography>\n            </DialogContent>\n            <MuiDialogActions>\n              <Button autoFocus onClick={() => handleListItemClick(3)} color=\"secondary\">\n                ANNULER LA DEMANDE\n              </Button>\n            </MuiDialogActions>\n          </>\n        )\n      } else {\n        return (\n        <>\n          <img className={classes.image} src={`https://dippr-api-production.herokuapp.com${transaction.meta.answer_dish.photo_url}`}></img>\n          <ListItem key={transaction.id} button>\n            <ListItemAvatar>\n              <Avatar\n                // alt={`Avatar n°${value + 1}`}\n                // src={`/static/images/avatar/${value + 1}.jpg`}\n              />\n            </ListItemAvatar>\n            <ListItemText id={transaction.id} primary={caller.first_name} />\n            <Typography variant=\"body2\" color=\"textPrimary\">\n              {caller.city}\n            </Typography>\n          </ListItem>\n          <DialogContent dividers>\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              {caller.first_name} vous a demandé votre\n              {transaction.meta.answer_dish.name}\n            </Typography>\n          </DialogContent>\n          <MuiDialogActions>\n            <Button autoFocus onClick={() => handleListItemClick(1)} color=\"primary\">\n              ACCEPTER\n            </Button>\n            <Button autoFocus onClick={() => handleListItemClick(1)} color=\"secondary\">\n              REFUSER\n            </Button>\n          </MuiDialogActions>\n        </>\n        )\n      }\n    }\n  }\n\n  return (\n    <>\n      <Dialog onClose={handleModalClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n        {handleItemDisplay()}\n      </Dialog>\n    </>\n  );\n}\n\nexport default TransactionDialog;\n","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/CheckoutProfile/AvatarCard.js",["180"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/CheckoutProfile/Avatar.js",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/CheckoutProfile/Checkout.js",["181"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/CheckoutProfile/General.js",["182","183","184","185"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Home/UserHome/index.jsx",["186","187","188"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/AppBar/index.jsx",["189","190"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/MyTransactions/index.jsx",["191","192","193","194"],"import React, { useState, useEffect } from 'react';\nimport { Grid, Container, Paper, Chip, Avatar } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport cooker from '../../assets/img/cooker.png';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport TransactionDialog from './TransactionDialog';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport './index.scss';\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    [theme.breakpoints.down('xs')]: {\n      paddingLeft: 0,\n      paddingRight: 0,\n    }\n  },\n  subMainContainer: {\n    paddingTop: 100,\n    [theme.breakpoints.down('xs')]: {\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      width: '100vw !important',\n      margin: '0 !important',\n    }\n  },\n  imgContainer : {\n    position: 'relative',\n    [theme.breakpoints.down('xs')]: {\n      paddingLeft: '0 !important',\n      paddingRight: '0 !important',\n      paddingTop: '0 !important'\n    }\n  },\n  image: {\n    borderRadius: 35,\n    width: '70%',\n    margin: 'auto',\n    display: \"block\",\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n  textContainer: {\n    [theme.breakpoints.down('xs')]: {\n      paddingLeft: '0 !important',\n      paddingRight: '0 !important',\n      paddingTop: '0 !important',\n    }\n  },\n  textPaper: {\n    borderRadius: 35,\n    padding: 25,\n    marginBottom: 20,\n    minHeight: 500,\n    maxHeight: 500,\n    overflow: 'auto',\n    webkitBoxShadow: 'inset -2px -15px 70px -40px rgba(0,0,0,0.30)',\n    mozBoxShadow: 'inset -2px -15px 70px -40px rgba(0,0,0,0.30)',\n    boxShadow: 'inset -2px -15px 70px -40px rgba(0,0,0,0.30)',\n    [theme.breakpoints.down('xs')]: {\n      borderRadius: 0,\n      marginBottom: 0,\n      webkitBoxShadow: '0px 0px 0px 0px rgba(0,0,0,0)',\n      mozBoxShadow: '0px 0px 0px 0px rgba(0,0,0,0)',\n      boxShadow: '0px 0px 0px 0px rgba(0,0,0,0)',\n      maxHeight: 'none',\n    },\n    \"&::-webkit-scrollbar\": {\n      display: 'none'\n    },\n    msOverflowStyle: 'none',\n    scrollbarWidth: 'none'\n  },\n  itemText: {\n    marginRight: '20px',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: \"smaller\"\n    },\n  },\n  pending: {\n    marginLeft: '20px',\n    color: \"#4BAAF5\"\n  },\n  confirmed: {\n    marginLeft: '20px',\n    color: \"#5CB660\"\n  }\n}));\n\nconst MyTransactions = () => {\n  const classes = useStyles();\n  const user = useSelector(state => state.user.user);\n  const [trocData, setTrocData] = useState([]);\n  const [donationData, setDonationData] = useState([]);\n  const [allData, setAllData] = useState([]);\n  const [selectedTransaction, setSelectedTransaction] = useState([])\n  const [selectedAnswerer, setSelectedAnswerer] = useState([])\n  const [selectedCaller, setSelectedCaller] = useState([])\n  const [open, setOpen] = useState(false);\n  const [isAccepted, setIsAccepted] = useState(false);\n  const [isRefused, setIsRefused] = useState(false);\n  const [isCancelled, setIsCancelled] = useState(false);\n\n  useEffect(() => {\n    fetchUserTransactions(\"trocs\")\n    fetchUserTransactions(\"donations\")\n    const interval = setInterval(() => {\n      fetchUserTransactions(\"trocs\")\n      fetchUserTransactions(\"donations\")\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [])\n\n  const fetchUserTransactions = (type) => {\n    fetch(`https://dippr-api-production.herokuapp.com/api/users/${user.id}/${type}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": Cookies.get(\"token\")\n      }\n    })\n    .then((response) => response.json())\n    .then((response) => {\n      if (type === \"trocs\") {\n        const trocs = response.data\n          .filter(transaction => (transaction.attributes.status === 'pending') || (transaction.attributes.status === 'confirmed'))\n        setTrocData(trocs)\n      } else {\n        const donations = response.data\n          .filter(transaction => (transaction.attributes.status === 'pending') || (transaction.attributes.status === 'confirmed'))\n        setDonationData(donations) \n      }\n    }).catch(error => {\n      console.log(error)\n    }).finally(() => {\n    })\n  }\n\n  useEffect(() => {\n    const allData = trocData.concat(donationData)\n    allData.sort((a, b) => (b.attributes.updated_at).localeCompare((a.attributes.updated_at)))\n    setAllData([...allData])\n  }, [trocData, donationData])\n\n  const handleTransactionClick = (transaction, answerer, caller) => {\n    setSelectedTransaction(transaction)\n    setSelectedAnswerer(answerer)\n    setSelectedCaller(caller)\n    setOpen(true)\n  }\n\n  const handleItemListDisplay = (transaction, currentUser) => {\n    if (transaction.type === \"trocs\") {\n      if (transaction.attributes.answerer_id == currentUser.id) {\n        return (\n          <ListItem spacing={3} button onClick={() => handleTransactionClick(transaction, currentUser, transaction.meta.caller)}>\n            <ListItemAvatar>\n              <Avatar\n                // alt={`Avatar n°${data.id + 1}`}\n                // src={`/static/images/avatar/${value + 1}.jpg`}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              dense\n              className={classes.itemText}\n              id={transaction.id}\n              primary={`${transaction.meta.caller.first_name} vous propose son\n              ${transaction.meta.caller_dish.name} contre votre ${transaction.meta.answer_dish.name}`\n              }\n            />\n            <Chip size=\"small\" label=\"TROC\" className={classes.chip} color=\"secondary\" />\n            {transaction.attributes.status === 'pending' ? \n              <HourglassFullIcon className={classes.pending}/>\n              : <CheckCircleIcon className={classes.confirmed}/>\n            }\n          </ListItem>\n        )\n      } else {\n        return (\n          <ListItem spacing={3} button onClick={() => handleTransactionClick(transaction, transaction.meta.answerer, currentUser)}>\n            <ListItemAvatar>\n              <Avatar\n                // alt={`Avatar n°${data.id + 1}`}\n                // src={`/static/images/avatar/${value + 1}.jpg`}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              className={classes.itemText}\n              id={transaction.id}\n              primary={`Vous avez proposé votre ${transaction.meta.caller_dish.name} à\n              ${transaction.meta.answerer.first_name} contre son  ${transaction.meta.answer_dish.name}`\n              }\n            />\n            <Chip size=\"small\" label=\"TROC\" className={classes.chip} color=\"secondary\" />\n            {transaction.attributes.status === 'pending' ? \n              <HourglassFullIcon className={classes.pending}/>\n              : <CheckCircleIcon className={classes.confirmed}/>\n            }\n          </ListItem>\n        )\n      }\n    } else if (transaction.type === \"donations\") {\n      if (transaction.attributes.caller_id == currentUser.id) {\n        return (\n          <ListItem spacing={3} button onClick={() => handleTransactionClick(transaction, transaction.meta.answerer, currentUser)}>\n            <ListItemAvatar>\n              <Avatar\n                // alt={`Avatar n°${data.id + 1}`}\n                // src={`/static/images/avatar/${value + 1}.jpg`}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              className={classes.itemText}\n              id={transaction.id}\n              primary={`Vous avez demandé à ${transaction.meta.answerer.first_name} son \n              ${transaction.meta.answer_dish.name}`\n              }\n            />\n            <Chip size=\"small\" label=\"DON\" className={classes.chip} color=\"primary\" />\n            {transaction.attributes.status === 'pending' ? \n              <HourglassFullIcon className={classes.pending}/>\n              : <CheckCircleIcon className={classes.confirmed}/>\n            }\n          </ListItem>\n        )\n      } else {\n        return (\n          <ListItem spacing={3} button onClick={() => handleTransactionClick(transaction, currentUser, transaction.meta.caller)}>\n            <ListItemAvatar>\n              <Avatar\n                // alt={`Avatar n°${data.id + 1}`}\n                // src={`/static/images/avatar/${value + 1}.jpg`}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              className={classes.itemText}\n              id={transaction.id}\n              primary={`${transaction.meta.caller.first_name} vous a demandé votre\n              ${transaction.meta.answer_dish.name}`\n              }\n            />\n            <Chip size=\"small\" label=\"DON\" className={classes.chip} color=\"primary\" />\n            {transaction.attributes.status === 'pending' ? \n              <HourglassFullIcon className={classes.pending}/>\n              : <CheckCircleIcon className={classes.confirmed}/>\n            }\n          </ListItem>\n        )\n      }\n    }\n  }\n\n  const handleTransactionCreation = (userAnswer) => {\n    let transactionData;\n    let type;\n      if (selectedTransaction.type === \"trocs\") {\n      type = \"trocs\"\n      transactionData = {\n        status: userAnswer\n      }\n    } else {\n      type = \"donations\"\n      transactionData = {\n        status: userAnswer\n      }\n    }\n    fetch(`https://dippr-api-production.herokuapp.com/api/${type}/${selectedTransaction.id}`, {\n      \"method\": \"PUT\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": Cookies.get(\"token\")\n      },\n      \"body\": JSON.stringify(transactionData)\n    })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\"There was an error with the Rails API\")\n      } else {\n      return response.json()\n      }\n    })\n    .then(() => {\n      if (userAnswer === 1) {\n        setIsAccepted(true)\n      } else if (userAnswer === 2) {\n        setIsRefused(true)\n      } else {\n        setIsCancelled(true)\n      }\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  useEffect(() => {\n    let acceptedTimeout;\n    if (isAccepted) {\n      acceptedTimeout = setTimeout(() => {\n        setIsAccepted(false)\n      }, 2000)\n    }\n    return () => {\n      clearTimeout(acceptedTimeout)\n    }\n  }, [isAccepted])\n\n  useEffect(() => {\n    let refusedTimeout;\n    if (isRefused) {\n      refusedTimeout = setTimeout(() => {\n        setIsRefused(false)\n      }, 2000)\n    }\n    return () => {\n      clearTimeout(refusedTimeout)\n    }\n  }, [isRefused])\n\n  useEffect(() => {\n    let cancelledTimeout;\n    if (isCancelled) {\n      cancelledTimeout = setTimeout(() => {\n        setIsCancelled(false)\n      }, 2000)\n    }\n    return () => {\n      clearTimeout(cancelledTimeout)\n    }\n  }, [isCancelled])\n\n  \n  \n  return (\n    <>\n    {isAccepted && \n      <Collapse\n        in={isAccepted}\n        style={{\n          zIndex: 10,\n          position: \"absolute\",\n          width: \"100%\"\n        }}\n        >\n        <Alert\n          severity=\"success\"\n          action={\n            <IconButton\n              aria-label=\"close\"\n              severity=\"success\"\n              size=\"small\"\n              onClick={() => {\n                setIsAccepted(false);\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n          {selectedTransaction.type === \"trocs\" ? \n            `La demande de troc a bien été acceptée !`\n            : `La demande de don a bien été acceptée !`\n          }\n        </Alert>\n      </Collapse>\n    }\n    {isRefused && \n      <Collapse\n        in={isRefused}\n        style={{\n          zIndex: 10,\n          position: \"absolute\",\n          width: \"100%\"\n        }}\n        >\n        <Alert\n          severity=\"info\"\n          action={\n            <IconButton\n              aria-label=\"close\"\n              severity=\"info\"\n              size=\"small\"\n              onClick={() => {\n                setIsRefused(false);\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n          {selectedTransaction.type === \"trocs\" ? \n            `La demande de troc a bien été refusée !`\n            : `La demande de don a bien été refusée !`\n          }\n        </Alert>\n      </Collapse>\n    }\n    {isCancelled && \n      <Collapse\n        in={isCancelled}\n        style={{\n          zIndex: 10,\n          position: \"absolute\",\n          width: \"100%\"\n        }}\n        >\n        <Alert\n          severity=\"info\"\n          action={\n            <IconButton\n              aria-label=\"close\"\n              severity=\"info\"\n              size=\"small\"\n              onClick={() => {\n                setIsCancelled(false);\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n          {selectedTransaction.type === \"trocs\" ? \n            `La demande de troc a bien été annulée !`\n            : `La demande de don a bien été annulée !`\n          }\n        </Alert>\n      </Collapse>\n    }\n    {open &&\n      <TransactionDialog\n        open={open}\n        handleClose={(closeValue) => setOpen(closeValue)}\n        handleSelectedValue={(userAnswer) => handleTransactionCreation(userAnswer)}\n        transaction={selectedTransaction}\n        answerer={selectedAnswerer}\n        caller={selectedCaller}\n        currentUser={user}\n      />\n    }\n      <Grid container fixed spacing={3} className={classes.subMainContainer} alignItems=\"center\">\n        <Grid item xs={12} md={6} className={classes.imgContainer} >\n          <img className={classes.image} src={cooker} alt=\"cooker\"></img>   \n        </Grid>\n        <Grid item xs={12} md={6} className={classes.textContainer}>\n          <Paper className={classes.textPaper}>\n          <List className={classes.root}>\n            {allData && allData.map((data) => {\n              return handleItemListDisplay(data, user)\n            })}\n          </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default MyTransactions\n",["195","196"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/DashboardAdmin/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Home/VisitorHome/index.jsx",["197","198","199"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/Map/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Swap/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/UserList/index.jsx",["200","201","202","203","204","205"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/store/actions/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/MiniMap/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/UI/Stars/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Dish/index.jsx",["206","207","208","209"],"import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport StarIcon from '@material-ui/icons/Star';\nimport RestaurantIcon from '@material-ui/icons/Restaurant'\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Grid, Button, ButtonGroup } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport DishCard from '../../components/DishCard';\nimport Cookies from 'js-cookie'\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },  grow: {\n    flexGrow: 1,\n  }, cardContainer: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n  }\n}));\n\nconst Dish = ()=> {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [data, setData] = useState([])\n  const [marketData, setMarketData] = useState([])\n  const user = useSelector(state => state.user.user);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const cardsDiplays = (value, type) =>(\n    <>\n    <div className={classes.cardContainer}>\n      <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n      >\n        {value.map(dish => {\n          \n          let dishData = dish.attributes\n            if (type === \"marketdish\"){\n              dishData = dish.meta.user_dish\n            }\n        return (\n          <Grid item xs={6} sm={4} md={3} lg={2} key={dish.id} width={300}>\n            <DishCard\n              market_dish_id={dishData.id}\n              name={dishData.name}\n              description={dishData.description}\n              dish_rating={dishData.dish_rating}\n              created_at={dishData.created_at}\n              type_of_card='user_dish'\n              photo_url={dishData.photo_url}\n            />\n          </Grid>\n        )})}\n      </Grid>\n    </div>\n  </>\n  );\n\n  const fetchData = (url) => {\n    fetch(url, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        'Authorization': `${Cookies.get('token')}`\n      },\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      setData(response.data)\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n\n  const fetchMarketData = (url) => {\n    fetch(url, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        'Authorization': `${Cookies.get('token')}`\n      },\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      setMarketData(response.data)\n    }).catch(error => {\n      console.log(error)\n    })\n  };\n  \n  useEffect(() => {\n    fetchData(`https://dippr-api-production.herokuapp.com/api/users/${user.id}/user_dishes`);\n    fetchMarketData(`https://dippr-api-production.herokuapp.com/api/users/${user.id}/market_dishes`)\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Grid container item justify='center' alignItems='center'>\n\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"scrollable force tabs example\"\n        >\n          \n          <Tab label=\"Mes spécialités\" icon={<StarIcon />} {...a11yProps(0)} />\n          <Tab label=\"Mes annonces\" icon={<RestaurantIcon />} {...a11yProps(1)} />\n        </Tabs>\n        </Grid>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {cardsDiplays(data, \"dish\")}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {cardsDiplays(marketData, \"marketdish\")}\n      </TabPanel>\n    </div>\n  );\n}\n\nexport default Dish",["210","211"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Search/SearchResults/index.jsx",["212"],"import React, { useEffect } from 'react'\nimport DishCard from '../../../components/DishCard';\nimport Loader from '../../../components/UI/Loader';\nimport Map from '../../../components/Map';\nimport dishSearch1 from '../../../assets/img/dishSearch1.png';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid } from '@material-ui/core/'\nimport './index.scss'\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(2)\n    }\n}))\n\nconst SearchResults = ({data, listOrMapValue = null, isSearching = null}) => {\n  const classes = useStyles()\n\n  const displayRouter = () => {\n    if (data.length > 0 && listOrMapValue === \"list\") {\n      return (\n        <>\n          <div className={classes.cardContainer}>\n            <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n            >\n              {data.map(dish => {\n              const dishData = dish.meta.user_dish\n              return (\n                <Grid item xs={6} sm={4} md={3} lg={2} key={dish.id} width={300}>\n                  <DishCard\n                    key={dish.id}\n                    market_dish_id={dish.id}\n                    user_first_name={dish.meta.user_first_name}\n                    name={dishData.name}\n                    description={dishData.description}\n                    dish_rating={dishData.dish_rating}\n                    user_id={dishData.user_id}\n                    created_at={dishData.created_at}\n                    type={dish.attributes.market_dish_type}\n                    type_of_card='market_dish'\n                    photo_url={dishData.photo_url}\n                  />\n                </Grid>\n              )})}\n            </Grid>\n          </div>\n        </>\n      )\n    } else if (data.length > 0 && listOrMapValue === \"map\") {\n      return (\n          <Map data={data}/>\n      )\n    } else if (data.length > 0 && listOrMapValue === null) {\n      return (\n        <>\n          <div className={classes.cardContainer}>\n            <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n            >\n              {data.map(dish => {\n              const dishData = dish.meta.user_dish\n              return (\n                <Grid item xs={6} sm={4} md={3} lg={2} key={dish.id} width={300}>\n                  <DishCard\n                    market_dish_id={dish.id}\n                    user_first_name={dish.meta.user_first_name}\n                    name={dishData.name}\n                    description={dishData.description}\n                    dish_rating={dishData.dish_rating}\n                    user_id={dishData.user_id}\n                    created_at={dishData.created_at}\n                    type={dish.attributes.market_dish_type}\n                    photo_url={dishData.photo_url}\n                  />\n                </Grid>\n              )})}\n            </Grid>\n          </div>\n        </>\n      )\n    } else {\n      return <img src={dishSearch1} alt=\"search-logo\" className=\"dishImg\"/>;\n    }   \n  }\n\n  useEffect(() => {\n    displayRouter()\n  }, [data])\n\n  return (\n    <>\n      {!isSearching ?\n        displayRouter()\n        : <Loader/>\n      }\n    </>\n  )\n}\n\nexport default SearchResults\n","/home/bakbledy93/NEXT/W11-12/Dippr/src/components/PrivateRoute/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Announcement/index.jsx",["213","214"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/MyMarketDishes/MyMarketDishesDisplay/index.jsx",["215","216","217","218","219"],"import React, { useEffect, useState } from 'react'\nimport DishCard from '../../../components/DishCard';\nimport Loader from '../../../components/UI/Loader';\nimport Map from '../../../components/Map';\nimport dishSearch1 from '../../../assets/img/dishSearch1.png';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid } from '@material-ui/core/'\nimport './index.scss'\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(2)\n    }\n}))\n\nconst MyMarketDishesDisplay = ({data}) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.cardContainer}>\n      <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n      >\n        {data.map(dish => {\n        const dishData = dish.meta.user_dish\n        return (\n          <Grid item xs={6} sm={4} md={3} lg={2} key={dish.id} width={300}>\n            <DishCard\n              market_dish_id={dish.id}\n              user_first_name={dish.meta.user_first_name}\n              name={dishData.name}\n              description={dishData.description}\n              dish_rating={dishData.dish_rating}\n              user_id={dishData.user_id}\n              created_at={dishData.created_at}\n              type={dish.attributes.market_dish_type}\n              type_of_card='market_dish'\n              photo_url={dishData.photo_url}\n            />\n          </Grid>\n        )})}\n      </Grid>\n    </div>\n  )\n}\n\nexport default MyMarketDishesDisplay\n","/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/EditProfileAdmin/index.jsx",["220","221","222","223","224","225"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/InstallPwa/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/Navbar/index.jsx",["226","227","228","229"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/Profile/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/pages/EditProfile/index.jsx",[],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/Snackbar/index.jsx",["230","231"],"/home/bakbledy93/NEXT/W11-12/Dippr/src/components/AddressSearchBar/index.jsx",["232","233"],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":15,"column":8,"nodeType":"240","messageId":"241","endLine":15,"endColumn":12},{"ruleId":"234","replacedBy":"242"},{"ruleId":"236","replacedBy":"243"},{"ruleId":"238","severity":1,"message":"244","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":18},{"ruleId":"238","severity":1,"message":"245","line":42,"column":17,"nodeType":"240","messageId":"241","endLine":42,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":54,"column":5,"nodeType":"248","messageId":"249","endLine":54,"endColumn":27},{"ruleId":"246","severity":1,"message":"247","line":76,"column":7,"nodeType":"248","messageId":"249","endLine":76,"endColumn":53},{"ruleId":"246","severity":1,"message":"247","line":77,"column":7,"nodeType":"248","messageId":"249","endLine":77,"endColumn":49},{"ruleId":"250","severity":1,"message":"251","line":99,"column":11,"nodeType":"252","endLine":99,"endColumn":64},{"ruleId":"238","severity":1,"message":"253","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"254","line":6,"column":15,"nodeType":"240","messageId":"241","endLine":6,"endColumn":24},{"ruleId":"238","severity":1,"message":"255","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":20},{"ruleId":"238","severity":1,"message":"256","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":35,"column":17,"nodeType":"259","messageId":"260","endLine":35,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":65,"column":6,"nodeType":"263","endLine":65,"endColumn":8,"suggestions":"264"},{"ruleId":"261","severity":1,"message":"265","line":26,"column":5,"nodeType":"263","endLine":26,"endColumn":7,"suggestions":"266"},{"ruleId":"234","replacedBy":"267"},{"ruleId":"236","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":46,"column":23,"nodeType":"271","messageId":"272","endLine":46,"endColumn":25},{"ruleId":"250","severity":1,"message":"251","line":49,"column":13,"nodeType":"252","endLine":49,"endColumn":136},{"ruleId":"250","severity":1,"message":"251","line":81,"column":13,"nodeType":"252","endLine":81,"endColumn":136},{"ruleId":"269","severity":1,"message":"270","line":109,"column":21,"nodeType":"271","messageId":"272","endLine":109,"endColumn":23},{"ruleId":"250","severity":1,"message":"251","line":112,"column":13,"nodeType":"252","endLine":112,"endColumn":136},{"ruleId":"250","severity":1,"message":"251","line":141,"column":11,"nodeType":"252","endLine":141,"endColumn":134},{"ruleId":"238","severity":1,"message":"273","line":25,"column":10,"nodeType":"240","messageId":"241","endLine":25,"endColumn":14},{"ruleId":"261","severity":1,"message":"274","line":155,"column":5,"nodeType":"263","endLine":155,"endColumn":11,"suggestions":"275"},{"ruleId":"238","severity":1,"message":"276","line":6,"column":10,"nodeType":"240","messageId":"241","endLine":6,"endColumn":13},{"ruleId":"261","severity":1,"message":"277","line":28,"column":5,"nodeType":"263","endLine":28,"endColumn":15,"suggestions":"278"},{"ruleId":"261","severity":1,"message":"279","line":32,"column":5,"nodeType":"263","endLine":32,"endColumn":15,"suggestions":"280"},{"ruleId":"261","severity":1,"message":"281","line":37,"column":5,"nodeType":"263","endLine":37,"endColumn":16,"suggestions":"282"},{"ruleId":"261","severity":1,"message":"283","line":167,"column":6,"nodeType":"263","endLine":167,"endColumn":8,"suggestions":"284"},{"ruleId":"250","severity":1,"message":"251","line":177,"column":15,"nodeType":"252","endLine":177,"endColumn":62},{"ruleId":"250","severity":1,"message":"251","line":182,"column":39,"nodeType":"252","endLine":182,"endColumn":60},{"ruleId":"285","severity":1,"message":"286","line":72,"column":3,"nodeType":"287","messageId":"272","endLine":72,"endColumn":7},{"ruleId":"261","severity":1,"message":"288","line":161,"column":6,"nodeType":"263","endLine":161,"endColumn":18,"suggestions":"289"},{"ruleId":"238","severity":1,"message":"290","line":2,"column":16,"nodeType":"240","messageId":"241","endLine":2,"endColumn":25},{"ruleId":"261","severity":1,"message":"291","line":123,"column":6,"nodeType":"263","endLine":123,"endColumn":8,"suggestions":"292"},{"ruleId":"269","severity":1,"message":"270","line":165,"column":46,"nodeType":"271","messageId":"272","endLine":165,"endColumn":48},{"ruleId":"269","severity":1,"message":"270","line":214,"column":44,"nodeType":"271","messageId":"272","endLine":214,"endColumn":46},{"ruleId":"234","replacedBy":"293"},{"ruleId":"236","replacedBy":"294"},{"ruleId":"238","severity":1,"message":"295","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"296","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"297","line":17,"column":8,"nodeType":"240","messageId":"241","endLine":17,"endColumn":14},{"ruleId":"238","severity":1,"message":"298","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":21},{"ruleId":"238","severity":1,"message":"253","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"254","line":6,"column":15,"nodeType":"240","messageId":"241","endLine":6,"endColumn":24},{"ruleId":"238","severity":1,"message":"255","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":20},{"ruleId":"238","severity":1,"message":"256","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":57,"column":23,"nodeType":"259","messageId":"260","endLine":57,"endColumn":25},{"ruleId":"238","severity":1,"message":"299","line":1,"column":38,"nodeType":"240","messageId":"241","endLine":1,"endColumn":44},{"ruleId":"238","severity":1,"message":"300","line":11,"column":16,"nodeType":"240","messageId":"241","endLine":11,"endColumn":22},{"ruleId":"238","severity":1,"message":"301","line":11,"column":24,"nodeType":"240","messageId":"241","endLine":11,"endColumn":35},{"ruleId":"261","severity":1,"message":"265","line":147,"column":6,"nodeType":"263","endLine":147,"endColumn":8,"suggestions":"302"},{"ruleId":"234","replacedBy":"303"},{"ruleId":"236","replacedBy":"304"},{"ruleId":"261","severity":1,"message":"305","line":98,"column":6,"nodeType":"263","endLine":98,"endColumn":12,"suggestions":"306"},{"ruleId":"238","severity":1,"message":"307","line":36,"column":10,"nodeType":"240","messageId":"241","endLine":36,"endColumn":24},{"ruleId":"246","severity":1,"message":"247","line":153,"column":7,"nodeType":"248","messageId":"249","endLine":153,"endColumn":89},{"ruleId":"238","severity":1,"message":"296","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":26},{"ruleId":"238","severity":1,"message":"295","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"253","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":14},{"ruleId":"238","severity":1,"message":"308","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":11},{"ruleId":"238","severity":1,"message":"309","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":19},{"ruleId":"238","severity":1,"message":"310","line":3,"column":23,"nodeType":"240","messageId":"241","endLine":3,"endColumn":34},{"ruleId":"238","severity":1,"message":"311","line":4,"column":9,"nodeType":"240","messageId":"241","endLine":4,"endColumn":18},{"ruleId":"238","severity":1,"message":"312","line":7,"column":9,"nodeType":"240","messageId":"241","endLine":7,"endColumn":13},{"ruleId":"238","severity":1,"message":"313","line":28,"column":11,"nodeType":"240","messageId":"241","endLine":28,"endColumn":20},{"ruleId":"238","severity":1,"message":"314","line":38,"column":11,"nodeType":"240","messageId":"241","endLine":38,"endColumn":18},{"ruleId":"261","severity":1,"message":"315","line":87,"column":8,"nodeType":"263","endLine":87,"endColumn":10,"suggestions":"316"},{"ruleId":"238","severity":1,"message":"317","line":89,"column":10,"nodeType":"240","messageId":"241","endLine":89,"endColumn":18},{"ruleId":"261","severity":1,"message":"288","line":124,"column":6,"nodeType":"263","endLine":124,"endColumn":18,"suggestions":"318"},{"ruleId":"238","severity":1,"message":"319","line":157,"column":9,"nodeType":"240","messageId":"241","endLine":157,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":205,"column":13,"nodeType":"252","endLine":205,"endColumn":66},{"ruleId":"320","severity":1,"message":"321","line":39,"column":3,"nodeType":"322","messageId":"323","endLine":48,"endColumn":2},{"ruleId":"261","severity":1,"message":"324","line":54,"column":6,"nodeType":"263","endLine":54,"endColumn":8,"suggestions":"325"},{"ruleId":"238","severity":1,"message":"326","line":36,"column":10,"nodeType":"240","messageId":"241","endLine":36,"endColumn":18},{"ruleId":"238","severity":1,"message":"327","line":41,"column":9,"nodeType":"240","messageId":"241","endLine":41,"endColumn":16},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'Dish' is defined but never used.","Identifier","unusedVar",["328"],["329"],"'Redirect' is defined but never used.","'setModal' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Loader' is defined but never used.","'useParams' is defined but never used.","'UserDishCard' is defined but never used.","'CardColumns' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profileId.profileId' and 'user.attributes.is_admin'. Either include them or remove the dependency array.","ArrayExpression",["330"],"React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["331"],["328"],["329"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'file' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleFileUpload' and 'user'. Either include them or remove the dependency array.",["332"],"'Add' is defined but never used.","React Hook useEffect has a missing dependency: 'handleNickName'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has a missing dependency: 'handleCityName'. Either include it or remove the dependency array.",["334"],"React Hook useEffect has a missing dependency: 'handleFirstName'. Either include it or remove the dependency array.",["335"],"React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.",["336"],"no-dupe-keys","Duplicate key 'list'.","ObjectExpression","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["337"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUserTransactions'. Either include it or remove the dependency array.",["338"],["328"],["329"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'moment' is defined but never used.","'useSelector' is defined but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.",["339"],["328"],["329"],"React Hook useEffect has a missing dependency: 'displayRouter'. Either include it or remove the dependency array.",["340"],"'publishSuccess' is assigned a value but never used.","'Map' is defined but never used.","'dishSearch1' is defined but never used.","'useDispatch' is defined but never used.","'loginUser' is defined but never used.","'Link' is defined but never used.","'userStore' is assigned a value but never used.","'dippers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["341"],"'anchorEl' is assigned a value but never used.",["342"],"'successAlert' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'alertType' and 'switchMessage'. Either include them or remove the dependency array.",["343"],"'cityName' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"346","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"358","fix":"367"},{"desc":"368","fix":"369"},"Update the dependencies array to be: [profileId.profileId, user.attributes.is_admin]",{"range":"370","text":"371"},"Update the dependencies array to be: [user.id]",{"range":"372","text":"373"},"Update the dependencies array to be: [file, handleFileUpload, user]",{"range":"374","text":"375"},"Update the dependencies array to be: [handleNickName, nickName]",{"range":"376","text":"377"},"Update the dependencies array to be: [cityName, handleCityName]",{"range":"378","text":"379"},"Update the dependencies array to be: [firstName, handleFirstName]",{"range":"380","text":"381"},"Update the dependencies array to be: [history.location.state]",{"range":"382","text":"383"},"Update the dependencies array to be: [history, searchTerm]",{"range":"384","text":"385"},"Update the dependencies array to be: [fetchUserTransactions]",{"range":"386","text":"387"},{"range":"388","text":"373"},"Update the dependencies array to be: [data, displayRouter]",{"range":"389","text":"390"},"Update the dependencies array to be: [userId]",{"range":"391","text":"392"},{"range":"393","text":"385"},"Update the dependencies array to be: [alertType, switchMessage]",{"range":"394","text":"395"},[2094,2096],"[profileId.profileId, user.attributes.is_admin]",[713,715],"[user.id]",[3871,3877],"[file, handleFileUpload, user]",[770,780],"[handleNickName, nickName]",[835,845],"[cityName, handleCityName]",[903,914],"[firstName, handleFirstName]",[4543,4545],"[history.location.state]",[4072,4084],"[history, searchTerm]",[3760,3762],"[fetchUserTransactions]",[3860,3862],[3264,3270],"[data, displayRouter]",[2738,2740],"[userId]",[3366,3378],[1228,1230],"[alertType, switchMessage]"]